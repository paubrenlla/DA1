@page "/proyectos/{id:int}/ruta_critica"
@using BusinessLogic
@using UserInterface.Data
@inject DB BaseDeDatos
@inject NavigationManager NavigationManager
@inject SessionLogic SessionLogic

<h3>RutaCritica</h3>

@if (!string.IsNullOrEmpty(mensajeError))
{
    <div class="alert alert-danger">@mensajeError</div>
}
@if (proyectoACalcular?.FinEstimado != null)
{
    <h1 class="display-4 text-primary">
        Fin estimado del proyecto: @proyectoACalcular.FinEstimado.Value.ToString("dd/MM/yyyy HH:mm")
    </h1>
}
else
{
    <h1 class="display-4 text-primary">
       Este proyecto no tiene tareas.
    </h1>
}

@code {
    private string mensajeError;
    [Parameter]
    public int id { get; set; }   
    private bool yaVerifiqueSesion = false;
    Proyecto proyectoACalcular;
    List<Tarea> tareasCriticas;
    List<Tarea> tareasNoCriticas;
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!yaVerifiqueSesion)
        {
            yaVerifiqueSesion = true;

            var activo = await SessionLogic.isUserActive();
            if (!activo)
            {
                NavigationManager.NavigateTo("/Login");
                return;
            }

            try
            {
                proyectoACalcular = BaseDeDatos.buscarProyectoPorId(id);
                tareasCriticas = proyectoACalcular.CalcularRutaCritica();
                tareasNoCriticas = proyectoACalcular.TareasNoCritcas();
                proyectoACalcular.CalcularFinEstimado();
            }
            catch (Exception ex)
            {
                mensajeError = ex.Message;
            }

            StateHasChanged();
        }
    }
}