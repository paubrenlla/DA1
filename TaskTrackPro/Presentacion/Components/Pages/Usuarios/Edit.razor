@page "/usuarios/{id:int}/editar/"

<PageTitle>Editar Usuario</PageTitle>

@using BusinessLogic
@inject DB DataBase
@inject NavigationManager NavigationManager

<h1>Editar Usuario</h1>

@if (!string.IsNullOrEmpty(mensajeError))
{
    <div class="alert alert-danger">@mensajeError</div>
}

<form onsubmit="return false">
    <div class="form-group">
        <label for="email">Email</label>
        <input type="text" class="form-control" id="email" @bind="emailNuevo">
    </div>

    <div class="form-group">
        <label for="nombre">Nombre</label>
        <input type="text" class="form-control" id="nombre" @bind="nombreNuevo">
    </div>

    <div class="form-group">
        <label for="apellido">Apellido</label>
        <input type="text" class="form-control" id="apellido" @bind="apellidoNuevo">
    </div>

    <div class="form-group">
        <label for="contraseña">Contraseña</label>
        <input type="password" class="form-control" id="contraseña" @bind="contraseñaNuevo">
    </div>
    
    <div class="form-group">
        <label for="fecha">Fecha de Nacimiento</label>
        <input type="date" class="form-control" id="fecha" @bind="fechaNueva" />
    </div>

    <input type="submit" class="btn btn-primary" value="Guardar cambios" @onclick="GuardarCambios">
</form>

@code {
    [Parameter]
    public int id { get; set; }

    private string emailNuevo;
    private string nombreNuevo;
    private string apellidoNuevo;
    private string contraseñaNuevo; 
    private DateTime fechaNueva;
    private string mensajeError;

    Usuario usuarioACambiar;

    protected override void OnInitialized()
    {
        try
        {
            usuarioACambiar = DataBase.buscarUsuarioPorId(id);
            if (usuarioACambiar == null)
            {
                mensajeError = $"Usuario no encontrado.";
                return;
            }

            emailNuevo = usuarioACambiar.Email;
            nombreNuevo = usuarioACambiar.Nombre;
            apellidoNuevo = usuarioACambiar.Apellido;
            contraseñaNuevo = usuarioACambiar.Pwd;
            fechaNueva = usuarioACambiar.FechaNacimiento;
        }
        catch (Exception ex)
        {
            mensajeError = ex.Message;
        }
    }

    private void GuardarCambios()
    {
        try
        {
            usuarioACambiar.Modificar(emailNuevo,nombreNuevo,apellidoNuevo,contraseñaNuevo,fechaNueva);
            NavigationManager.NavigateTo("/usuarios");
        }
        catch (Exception ex)
        {
            mensajeError = ex.Message;
        }
    }
}
