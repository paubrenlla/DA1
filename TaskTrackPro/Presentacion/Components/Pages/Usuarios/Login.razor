@page "/login"

@using Domain
@using UserInterface.Data
@inject SessionLogic SessionManager
@inject NavigationManager NavigationManager

<h1>Iniciar sesión</h1>

@if (!string.IsNullOrEmpty(mensajeError))
{
    <div class="alert alert-danger">@mensajeError</div>
}

<form onsubmit="return false">
    <div class="form-group">
        <label for="email">Email</label>
        <input type="text" class="form-control" id="email" @bind="email">
    </div>

    <div class="form-group">
        <label for="password">Contraseña</label>
        <input type="password" class="form-control" id="password" @bind="password">
    </div>

    <input type="submit" class="btn btn-primary" value="Iniciar sesión" @onclick="IniciarSesion">
</form>

@code {
    private string email;
    private string password;
    private string mensajeError;
    private bool yaVerifiqueSesion = false;
    private bool sesionActiva;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !yaVerifiqueSesion)
        {
            try
            {
                sesionActiva = await SessionManager.isUserActive();
                
                if (sesionActiva)
                {
                    NavigationManager.NavigateTo("/");
                    return;
                }
            }
            catch (Exception ex)
            {
                mensajeError = ex.Message;
                
            }   
            yaVerifiqueSesion = true;
            StateHasChanged();
        }
    }  
    


    private async Task IniciarSesion()
    {
        try
        {
            await SessionManager.Login(email, password);
            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            mensajeError = ex.Message;
        }
    }
}