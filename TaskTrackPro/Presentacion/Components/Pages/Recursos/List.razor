@page "/recursos"
@using DTOs
@using Controllers
@using UserInterface.Data
@inject SessionLogic SessionLogic
@inject NavigationManager NavigationManager
@inject RecursoController Recursos
@inject UsuarioController Usuarios

<h1>
    Recursos
    <a class="btn btn-success btn-sm" style="float: right; margin-right: 40px;" href="/recursos/crear">Crear +</a>
</h1>

<table class="table">
    <thead>
        <tr>
            <th>Nombre</th>
            <th>Tipo</th>
            <th>Descripci√≥n</th>
            <th>Cantidad</th>
            <th>En uso</th>
            <th>Se comparten</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (RecursoDTO recurso in listaDeRecursos)
        {
            <tr>
                <td>@recurso.Nombre</td>
                <td>@recurso.Tipo</td>
                <td>@recurso.Descripcion</td>
                <td>@recurso.CantidadDelRecurso.ToString()</td>
                <td>@recurso.CantidadEnUso.ToString()</td>
                <td>@recurso.SePuedeCompartir</td>
                <td>
                    <a class="btn btn-success btn-sm" href="recursos/@recurso.Id/editar/">Editar</a>
                    @if(Recursos.EstaEnUso(recurso.Id)){
                        <button class="btn btn-danger btn-sm" disabled>Eliminar</button>
                    }
                    else
                    {
                        <button class="btn btn-danger btn-sm" @onclick="@(() => Eliminar_Recurso(recurso.Id))">Eliminar</button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<RecursoDTO>? listaDeRecursos = new List<RecursoDTO>();
    private bool yaVerifiqueSesion = false;
    UsuarioDTO usuarioLogeado;
    private string mensajeError;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var isUserActive = await SessionLogic.IsUserActive();
        if (firstRender && !yaVerifiqueSesion)
        {
            if (!isUserActive)
            {
                NavigationManager.NavigateTo("/Login");
            }
            usuarioLogeado = await SessionLogic.GetCurrentUser();
            if (!Usuarios.EsAdmin(usuarioLogeado.Id))
            {
                NavigationManager.NavigateTo("/");
            }
            else
            {
            listaDeRecursos = Recursos.GetAll();
            StateHasChanged();
            }
        }
    }
    
    private void Eliminar_Recurso(int recursoId)
    {
        mensajeError = "";

        try
        {
            Recursos.Delete(recursoId);
        
            listaDeRecursos = Recursos.GetAll();
            StateHasChanged();
        }
        catch (Exception ex)
        {
            mensajeError = ex.Message;
            StateHasChanged();
        }
    }

}
