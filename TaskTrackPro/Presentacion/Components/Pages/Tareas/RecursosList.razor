@page "/proyectos/{idProyecto:int}/tareas/{idTarea:int}/recursos"
@using BusinessLogic
@using BusinessLogic.Enums
@using UserInterface.Data
@inject SessionLogic SessionLogic
@inject NavigationManager NavigationManager


@inject DB BaseDeDatos

<h1>
    RecursosNecesarios
</h1>

<div>
    <label for="recursoSelect">Seleccionar Recurso:</label>
    <select id="recursoSelect" @bind="recursoSeleccionadoId">
        <option value="">Seleccione un recurso</option>
        @foreach (var recurso in listaDeRecursosDisponibles)
        {
            <option value="@recurso.Id">@recurso.Nombre</option>
        }
    </select>
</div>

<div>
    <label for="cantidadInput">Cantidad Necesaria:</label>
    <input type="number" id="cantidadInput" @bind="cantidadNecesaria" />
</div>

<button class="btn btn-success" @onclick="AgregarRecurso">Agregar Recurso</button>

<table class="table">
    <thead>
    <tr>
        <th>Nombre</th>
        <th>Tipo</th>
        <th>Descripci√≥n</th>
        <th>Cantidad necesaria</th>
        <th>Cantidad disponible</th>
        <th>En uso</th>
        <th>Se comparten</th>
        <th>Acciones</th>
    </tr>
    </thead>
    <tbody>
    @foreach (RecursoNecesario recursoNecesario in listaDeRecursosNecesarios)
    {
        Recurso recurso = recursoNecesario.Recurso;
        <tr>
            <td>@recurso.Nombre</td>
            <td>@recurso.Tipo</td>
            <td>@recurso.Descripcion</td>
            <td>@recursoNecesario.CantidadNecesaria</td>
            <td>@recurso.CantidadDelRecurso.ToString()</td>
            <td>@recurso.CantidadEnUso.ToString()</td>
            <td>@recurso.SePuedeCompartir</td>
            <td>
                @if (BaseDeDatos.buscarProyectoPorId(idProyecto).BuscarTareaPorId(idTarea).EstadoActual.Valor == TipoEstadoTarea.Ejecutandose)
                {
                    <button class="btn btn-danger btn-sm" disabled>Eliminar</button>
                }
                else
                {
                    <button class="btn btn-danger btn-sm" @onclick="@(() => BaseDeDatos.buscarProyectoPorId(idProyecto).BuscarTareaPorId(idTarea).EliminarRecurso(recursoNecesario))">
                        Eliminar
                    </button>
                }
            </td>
        </tr>
    }
    </tbody>
</table>

@code {
    [Parameter]
    public int idProyecto { get; set; }
    
    [Parameter]
    public int idTarea { get; set; }
    
    private List<RecursoNecesario>? listaDeRecursosNecesarios = new List<RecursoNecesario>();
    private bool yaVerifiqueSesion = false;
    
    private int recursoSeleccionadoId;
    private int cantidadNecesaria = 1;
    private List<Recurso> listaDeRecursosDisponibles = new List<Recurso>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var isUserActive = await SessionLogic.isUserActive();
        if (firstRender && !yaVerifiqueSesion)
        {
            if (!isUserActive)
            {
                NavigationManager.NavigateTo("/Login");
            }
            else
            {
                Proyecto proyectoActual = BaseDeDatos.buscarProyectoPorId(idProyecto);
                Tarea tareaActual = proyectoActual.BuscarTareaPorId(idTarea);
                listaDeRecursosNecesarios = tareaActual.RecursosNecesarios;
                StateHasChanged();
            }
        }
    }
    
    protected override async Task OnInitializedAsync()
    {
        Proyecto proyectoActual = BaseDeDatos.buscarProyectoPorId(idProyecto);
        Tarea tareaActual = proyectoActual.BuscarTareaPorId(idTarea);

        listaDeRecursosDisponibles = BaseDeDatos.ListaRecursos;
    }

    private async Task AgregarRecurso()
    {
        var recurso = listaDeRecursosDisponibles.FirstOrDefault(r => r.Id == recursoSeleccionadoId);
        
        if (recurso != null && cantidadNecesaria > 0)
        {
            Proyecto proyectoActual = BaseDeDatos.buscarProyectoPorId(idProyecto);
            Tarea tareaActual = proyectoActual.BuscarTareaPorId(idTarea);
            
            tareaActual.AgregarRecurso(recurso, cantidadNecesaria);
            
            NavigationManager.NavigateTo($"/proyectos/{idProyecto}/tareas/{idTarea}/recursos");
        }
    }
}