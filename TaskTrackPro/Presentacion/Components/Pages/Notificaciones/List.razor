@page "/notificaciones"
@using Controllers
@using DTOs
@using UserInterface.Data

@inject NotificacionController NotificacionesController
@inject SessionLogic SessionLogic
@inject NavigationManager NavigationManager

<h3 class="text-xl font-bold mb-4">Notificaciones no leídas</h3>

@if (!sesionVerificada)
{
    <p>Cargando notificaciones…</p>
}
else if (notificacionesNoLeidas is null)
{
    <p>Cargando notificaciones…</p>
}
else if (!notificacionesNoLeidas.Any())
{
    <p>No tenés notificaciones nuevas</p>
}
else
{
    <ul class="space-y-4">
        @foreach (var n in notificacionesNoLeidas)
        {
            <li class="p-4 rounded-xl shadow bg-white flex justify-between items-center">
                <span>@n.Mensaje</span>
                <button class="btn btn-secondary btn-sm"
                        @onclick="() => MarcarComoLeida(n.Id)">
                    Marcar como leído
                </button>
            </li>
        }
    </ul>
}

@code {
    private bool sesionVerificada;
    private UsuarioDTO? usuarioLogueado;
    private List<NotificacionDTO>? notificacionesNoLeidas;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!sesionVerificada && firstRender)
        {
            var activo = await SessionLogic.IsUserActive();
            if (!activo)
            {
                NavigationManager.NavigateTo("/login");
                return;
            }

            usuarioLogueado = await SessionLogic.GetCurrentUser();
            if (usuarioLogueado is null)
            {
                NavigationManager.NavigateTo("/login");
                return;
            }

            await CargarNotificaciones();

            sesionVerificada = true;
            StateHasChanged();
        }
    }

    private async Task CargarNotificaciones()
    {
        notificacionesNoLeidas = await Task.Run(() =>
            NotificacionesController.NotificacionesNoLeidas(usuarioLogueado)
        );
    }

    private async Task MarcarComoLeida(int notificacionId){
        NotificacionesController.MarcarLeida(notificacionId, usuarioLogueado.Id);

        await CargarNotificaciones();
        StateHasChanged();
    }
}
