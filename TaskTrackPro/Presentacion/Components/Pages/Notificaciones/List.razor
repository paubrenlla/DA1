@page "/notificaciones"
@using BusinessLogic
@using UserInterface.Data
@inject NavigationManager NavigationManager
@inject SessionLogic SessionLogic
@inject DB BaseDeDatos


<h3 class="text-xl font-bold mb-4">Notificaciones no leídas</h3>

@if (notificacionesNoLeidas is null)
{
    <p>Cargando notificaciones...</p>
}
else if (!notificacionesNoLeidas.Any())
{
    <p>No tenés notificaciones nuevas</p>
}
else
{
    <ul class="space-y-4">
        @foreach (var notificacion in notificacionesNoLeidas)
        {
            <li class="p-4 rounded-xl shadow bg-white">
                <div class="flex justify-between items-center">
                    <span>@notificacion.Mensaje</span>
                    <button class="bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600"
                            @onclick="() => MarcarComoLeida(notificacion)">
                        Marcar como leído
                    </button>
                </div>
            </li>
        }
    </ul>
}


@code {
    private bool yaVerifiqueSesion = false;
    private List<Notificacion>? notificaciones;
    private List<Notificacion>? notificacionesNoLeidas;
    Usuario usuarioLogueado;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !yaVerifiqueSesion)
        {
            var isUserActive = await SessionLogic.isUserActive();
            if (!isUserActive)
            {
                NavigationManager.NavigateTo("/Login");
            }
            else
            {
                usuarioLogueado = await SessionLogic.GetCurrentUser();
                notificacionesNoLeidas = BaseDeDatos.NotificacionesNoLeidas(usuarioLogueado);
                StateHasChanged(); 
            }
        }
    }
    

    private void MarcarComoLeida(Notificacion notificacion)
    {
        if (usuarioLogueado != null && !notificacion.VistaPorUsuarios.Contains(usuarioLogueado))
        {
            notificacion.MarcarComoVista(usuarioLogueado);
            notificacionesNoLeidas = BaseDeDatos.NotificacionesNoLeidas(usuarioLogueado);
            StateHasChanged();
        }
    }
}
